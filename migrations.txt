CREATE TABLE bonus (
    bonus_id SERIAL PRIMARY KEY,
    points INTEGER
);

CREATE TABLE condition (
    condition_id SERIAL PRIMARY KEY,
    condition TEXT,
    create_time TIMESTAMP DEFAULT current_timestamp
);

CREATE TABLE miner (
    miner_id SERIAL PRIMARY KEY,
    price INTEGER,
    level INTEGER DEFAULT 1,
    point_per_hour INTEGER,
    title TEXT,
    description TEXT,
    photo VARCHAR(50),
    class VARCHAR(50),
    condition_id INTEGER,
    FOREIGN KEY (condition_id) REFERENCES condition(condition_id)
);

CREATE TABLE "user" (
    user_id SERIAL PRIMARY KEY,
    telegram_id BIGINT NOT NULL UNIQUE,
    phone_number VARCHAR(20),
    user_name VARCHAR(30),
    profile_photo VARCHAR(50),
    bonus_id INTEGER,
    FOREIGN KEY (bonus_id) REFERENCES bonus(bonus_id),
    last_login TIMESTAMP DEFAULT current_timestamp,
    sign_up_date DATE DEFAULT current_date,
    miners INTEGER[],
    password VARCHAR(255),
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    language_code VARCHAR(2),
    referral_link VARCHAR(20)
);

CREATE TABLE points (
    user_id INTEGER,
    FOREIGN KEY (user_id) REFERENCES "user"(user_id),
    points_total BIGINT,
    points_per_hour INTEGER,
    next_rise timestamp
);

CREATE TABLE friend_for (
    user_id INTEGER,
    FOREIGN KEY (user_id) REFERENCES "user"(user_id),
    count INTEGER,
    list_of_ids INTEGER[]
);

CREATE TABLE friend_to (
    user_id INTEGER,
    FOREIGN KEY (user_id) REFERENCES "user"(user_id),
    friend_id INTEGER
);

CREATE TABLE level_list (
    level_id SERIAL PRIMARY KEY,
    title VARCHAR(50),
    description TEXT
);

CREATE TABLE level (
    user_id INTEGER,
    FOREIGN KEY (user_id) REFERENCES "user"(user_id),
    level INTEGER,
    FOREIGN KEY (level) REFERENCES level_list(level_id),
    current_percent INTEGER
);

ALTER TABLE public."user"
ADD CONSTRAINT unique_constraint_name UNIQUE (telegram_id, user_name);

CREATE SCHEMA miners;

CREATE TABLE miners.miner (
    miner_id SERIAL PRIMARY KEY,
    price INTEGER DEFAULT 100,
    level INTEGER DEFAULT 1,
    max_level INTEGER DEFAULT 20,
    point_per_hour INTEGER DEFAULT 40,
    title VARCHAR(50) NOT NULL,
    description TEXT,
    photo VARCHAR(50) DEFAULT '/miner/special_card_procastination.png',
    class VARCHAR(50),
    condition TEXT,
    created_time TIMESTAMP DEFAULT current_timestamp,
    deactivation_time TIMESTAMP DEFAULT NULL,
    active BOOLEAN DEFAULT TRUE,
    rise_coef_price INTEGER,
    rise_coef_income INTEGER
);

CREATE TABLE miners.user_miner (
    user_id INTEGER,
    FOREIGN KEY (user_id) REFERENCES public."user"(user_id),
    miner_id INTEGER,
    FOREIGN KEY (miner_id) REFERENCES miners.miner(miner_id),
    next_price INTEGER,
    next_level INTEGER DEFAULT 2,
    point_per_hour INTEGER,
    active BOOLEAN DEFAULT TRUE
);

