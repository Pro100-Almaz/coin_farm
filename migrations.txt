CREATE TABLE bonus (
    bonus_id SERIAL PRIMARY KEY,
    points INTEGER
);

CREATE TABLE condition (
    condition_id SERIAL PRIMARY KEY,
    condition TEXT,
    create_time TIMESTAMP DEFAULT current_timestamp
);

CREATE TABLE miner (
    miner_id SERIAL PRIMARY KEY,
    price INTEGER,
    level INTEGER DEFAULT 1,
    point_per_hour INTEGER,
    title TEXT,
    description TEXT,
    photo VARCHAR(50),
    class VARCHAR(50),
    condition_id INTEGER,
    FOREIGN KEY (condition_id) REFERENCES condition(condition_id)
);

CREATE TABLE "user" (
    user_id SERIAL PRIMARY KEY,
    telegram_id BIGINT NOT NULL UNIQUE,
    phone_number VARCHAR(20),
    user_name VARCHAR(30),
    profile_photo VARCHAR(50),
    bonus_id INTEGER,
    FOREIGN KEY (bonus_id) REFERENCES bonus(bonus_id),
    last_login TIMESTAMP DEFAULT current_timestamp,
    sign_up_date DATE DEFAULT current_date,
    miners INTEGER[],
    password VARCHAR(255),
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    language_code VARCHAR(2),
    referral_link VARCHAR(20)
);

CREATE TABLE points (
    user_id INTEGER,
    FOREIGN KEY (user_id) REFERENCES "user"(user_id),
    points_total BIGINT,
    points_per_hour INTEGER,
    next_rise timestamp
);

CREATE TABLE friend_for (
    user_id INTEGER,
    FOREIGN KEY (user_id) REFERENCES "user"(user_id),
    count INTEGER,
    list_of_ids INTEGER[]
);

CREATE TABLE friend_to (
    user_id INTEGER,
    FOREIGN KEY (user_id) REFERENCES "user"(user_id),
    friend_id INTEGER
);

CREATE TABLE level_list (
    level_id SERIAL PRIMARY KEY,
    title VARCHAR(50),
    description TEXT
);

CREATE TABLE level (
    user_id INTEGER,
    FOREIGN KEY (user_id) REFERENCES "user"(user_id),
    level INTEGER,
    FOREIGN KEY (level) REFERENCES level_list(level_id),
    current_percent INTEGER
);

ALTER TABLE public."user"
ADD CONSTRAINT unique_constraint_name UNIQUE (telegram_id, user_name);

CREATE SCHEMA miners;

CREATE TABLE miners.miner (
    miner_id SERIAL PRIMARY KEY,
    price INTEGER DEFAULT 100,
    level INTEGER DEFAULT 1,
    max_level INTEGER DEFAULT 20,
    point_per_hour INTEGER DEFAULT 40,
    title VARCHAR(50) NOT NULL,
    description TEXT,
    photo VARCHAR(50) DEFAULT '/miner/special_card_procastination.png',
    class VARCHAR(50),
    condition TEXT,
    created_time TIMESTAMP DEFAULT current_timestamp,
    deactivation_time TIMESTAMP DEFAULT NULL,
    active BOOLEAN DEFAULT TRUE,
    rise_coef_price INTEGER,
    rise_coef_income INTEGER,
    type TEXT
);

CREATE TABLE miners.user_miner (
    user_id INTEGER,
    FOREIGN KEY (user_id) REFERENCES public."user"(user_id),
    miner_id INTEGER,
    FOREIGN KEY (miner_id) REFERENCES miners.miner(miner_id),
    next_price INTEGER,
    next_level INTEGER DEFAULT 2,
    point_per_hour INTEGER,
    next_point_per_hour INTEGER,
    active BOOLEAN DEFAULT TRUE
);

INSERT INTO miners.miner (price, point_per_hour, title, description, class, condition, rise_coef_price, rise_coef_income)
VALUES  (24000, 5150, 'test3', 'description3', 'special', 'minimum_point:300', 50, 10),
        (30000, 5000, 'test101', 'description!', 'special', 'minimum_friends:3', 50, 10),
        (20000, 4000, 'test№', 'description№', 'special', 'minimum_point:300', 50, 10),
        (44444, 5000, 'test13', 'description13', 'usual', 'NULL', 35, 5),
        (15000, 3480, 'test!', 'description!', 'special', 'minimum_friends:3', 50, 10),
        (40000, 4000, 'test*', 'unlocker_1', 'usual', 'minimum_point:300', 35, 5),
        (25000, 2323, 'test**', 'unlocked_group_1', 'usual', 'minimum_point:300', 42, 7),
        (50000, 2500, 'test**', 'unlocked_group_1', 'usual', 'minimum_point:300', 42, 7),
        (30000, 2000, 'test**', 'unlocked_group_1', 'usual', 'minimum_point:300', 42, 7),
        (25000, 1670, 'test*', 'unlocker_2', 'usual', 'minimum_point:300', 42,7),
        (11200, 1620, 'test**', 'unlocked_group_2', 'usual', 'minimum_point:300', 42, 7),
        (20000, 1500, 'test**', 'unlocked_group_2', 'usual', 'minimum_point:300', 42, 7),
        (10000, 1300, 'test**', 'unlocked_group_2', 'usual', 'minimum_point:300', 42, 7),
        (26970, 1550, 'test*', 'unlocker_3', 'usual', 'minimum_point:300',42,7),
        (6200, 1050, 'test**', 'unlocked_group_3', 'usual', 'minimum_point:300', 42, 7),
        (55555, 1000, 'test**', 'unlocked_group_3', 'usual', 'minimum_point:300', 42, 7),
        (15000, 1000, 'test**', 'unlocked_group_3', 'usual', 'minimum_point:300', 42, 7),
        (8888, 710, 'test!', 'description!', 'usual', 'minimum_friends:3', 42,7),
        (4000, 600, 'test№', 'description№', 'usual', 'minimum_point:300', 42,7),
        (11111, 730, 'test№', 'description№', 'usual', 'minimum_point:300', 42,7),
        (30000, 500, 'test!', 'description!', 'usual', 'minimum_friends:3', 42, 7),
        (9990, 529, 'test31', 'description31', 'usual', NULL, 35, 5),
        (7980, 500, 'test23', 'description23', 'usual', NULL, 35, 5),
        (3000, 400, 'test16', 'description16', 'usual', NULL, 35, 5),
        (6000, 477, 'test27', 'description27', 'usual', NULL, 35, 5),
        (8850, 460, 'test34', 'description34', 'usual', NULL, 35, 5),
        (6100, 420, 'test1', 'description1', 'usual', NULL, 35, 5),
        (15000, 300, 'test7', 'description7', 'usual', NULL, 35, 5),
        (3400, 280, 'test36', 'description36', 'usual', NULL, 35, 5),
        (1500, 200, 'test21', 'description21', 'usual', NULL, 35, 5),
        (3000, 224, 'test24', 'description24', 'usual', NULL, 35, 5),
        (2590, 210, 'test25', 'description25', 'usual', NULL, 35, 5),
        (3111, 160, 'test29', 'description29', 'usual', NULL, 35, 5),
        (1000, 100, 'test28', 'description28', 'usual', NULL, 35, 5),
        (1330, 98, 'test26', 'description26', 'usual', NULL, 35, 5),
        (500, 70, 'test35', 'description35', 'usual', NULL, 35, 5),
        (790, 40, 'test37', 'description37', 'usual', NULL, 35, 5),
        (100, 40, 'test33', 'description33', 'usual', NULL, 35, 5),
        (400, 30, 'test38', 'description38', 'usual', NULL, 35, 5);